
############################Task  August 16 2023#################################

###########################Sprinix TechnoLabs


#          ___* 
#          __** 
#          _*** 
#          ****

<?php
/*
#Pattern Using 2 loop only
  
  $n = readline ("Enter size of pattern\n");
for ($i = 1; $i <= $n; $i++)
  {
    for ($j = 1; $j <= $n; $j++)
      {
	if ($j <= $n - $i)
	  echo " ";

	else
	  {
	    echo "*";
	  }
      }
    echo "\n";
  }
*/
#Pattern Using 2 loop only


#          ___* 
#          __* * 
#          _* * * 
#          * * * *
      
      $n = readline ("Enter size of pattern\n");
for ($i = 1; $i <= $n; $i++)
  {
    for ($j = 1; $j <= $n; $j++)
      {
	if ($j <= $n - $i)
	  echo " ";

	else
	  {
	    echo "* ";
	  }
      }
    echo "\n";
    
  } 
  
  
  #Pattern Using 2 loop only


#         ******
 #        *   *
 #        *  *
 #        * *
 #        **
 #        *
      
      $n = readline ("Enter size of pattern\n");
for ($i = 0; $i < $n; $i++)
{
    for($j=0;$j<$n-$i;$j++)
    {
        if($i==0||$j==0||$j==$n-1-$i)
        echo"*";
        else
        echo " ";
        
    }
    echo"\n";
}
###########################################################################################

<?php
/******************************************************************************

 Program to find Min and Maximum number in single dimension array using functions

*******************************************************************************/

function printArray(array $arr,$size)
{
    
    for ($i=0 ;$i<$size;$i++)
{
    echo"$arr[$i],";
    
}

}
function checkMin(array $arr,$size)
:int{
   
$min=$arr[0];
for ($i=1 ;$i<$size;$i++)
{
    if($min>$arr[$i])
    $min=$arr[$i];
    
}
 return $min;
}

function checkMax(array $arr,$size)
:int{
   
$max=$arr[0];
for ($i=1 ;$i<$size;$i++)
{
    if($max<$arr[$i])
    $max=$arr[$i];
   
}
 return $max;
}
//    input size
$size = readline("Enter size of array \n");


for ($i=0 ;$i<$size;$i++)
{     $b=$i+1;
    $arr[$i]=readline("enter value $b. \n");
    
}

echo"minimum value among \n"; 
printArray($arr,$size);
echo "is ";
echo checkMin($arr,$size);
echo "\nAnd Maximum is ";
echo checkMax($arr,$size);

#############################################################################################


<?php
/******************************************************************************

 Program to Fibonacci and tribonacci

*******************************************************************************/



function Nacci($size,$a=0, $b=1, $c=2)
{
    echo"$a,$b,$c";
    
    for($i=1;$i<=$size-3;$i++)
    {
        $d=$a+$b+$c;
        
        echo",$d";
        
        $a=$b;
        $b=$c;
        $c=$d;
        
    }
    
    
    
}


function fiboNacci($size,$a=0, $b=1)
  {  echo"$a,$b";
    
    for($i=1;$i<=$size-2;$i++)
    {
        $c=$a+$b;
        
        echo",$c";
        
        $a=$b;
        $b=$c;
       
        
    }
    
    
    
}



$a=readline("enter 1 for fibonaci and 2 for tribnacii");

if($a==2)
{
    $s=readline("enter size of tribnacii");
    Nacci($s);
}

else if($a==1)
{
    $s=readline("enter size of fibonacii");
    fiboNacci($s);
}

else
echo "invalid choice";



#############################################################################################


Unique and Duplicate Values in Array

<?php
/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/



function SepDupAndUni(array $arr,$s)
{
     $dupArray=[];
     $uniqArray=[];
     $dupI=0;
     $UniI=0;
     
     
     
    
    
    
   for($i=0;$i<$s;$i++) 
     {  
         $c1=0;
        if($arr[$i]==-1)
        continue;
    
        for($j=0;$j<$s;$j++)
        {
            if($arr[$j]==$arr[$i]&& $i!=$j)
            {$c1+=1;
            $arr[$j]=-1;}
        }
        if($c1>0){
        $dupArray[$dupI++]= $arr[$i];
        $arr[$i]=-1;
        }
        else {
            $uniqArray[$UniI++]=$arr[$i];
        }
        
    }
    PrintArray($dupArray,"Duplicate");
    PrintArray($uniqArray,"Unique");
    
    
}






function PrintArray(array $arr1, $uname)
{        
    
    echo ("\n $uname array values are ");
    $entry=false;
        for ($i=0 ;$i<count($arr1);$i++)
         {
             $entry=true;
            echo"$arr1[$i],";
    
          }
          if($entry==false)
          {
              echo"none";
          }
      

    
}
$size=readline("Enter size of Array\n");
$arr= [];
 for($i=0;$i<$size;$i++)
    {  $p=$i+1;
        $arr[$i]=readline("Enter value $p ");
    }
   

PrintArray($arr, "Original");
SepDupAndUni($arr,$size);


##############################################################################################3

    <?php
/******************************************************************************


Enter 1 for add digits \n
Enter 2 for reverse a digit\n
Enter 3 for factorial\n
Enter 0 to exit
*******************************************************************************/

echo("Enter 1 for add digits \nEnter 2 for reverse a digit\nEnter 3 for factorial\Enter 0 to exit");
echo("\n");
$choice = readline();
$b=true;
while($b==true)
{
    if($choice==0){
    $b=false;
    echo"You exit";
    continue;
    }
    switch($choice)
    {
        
        case 1: 
            echo("Enter no\n");
            $n= readline();
            
            $sum=0;
            
            while($n>0)
            {
                $d=$n%10;
                $sum+=$d;
                $n/=10;
            }
            echo"$sum\n";
            break;
            
     
        
         case 2: 
            echo("Enter no\n");
            $n1= readline();
            #$cp=n;
            
            $rev=0;
            
            while($n1>0)
            {
                $d=$n1%10;
                $rev=($rev*10)+$d;
                $n1=intdiv($n1,10);
                
            }
            
            echo"$rev\n";
            break;
            
            case 3:
                $s=readline("Enter size\n");
                $f=1;
                for($i=2;$i<=$s;$i++)
                {
                    $f*=$i;
                }
                echo"$f\n";
                break;
                
            default:
                echo"Wrong choice";
            
            
    }
    $choice=readline("\nEnter choice again");
    echo"\n";
    
}
       


################################################################################################



         
         
         
         



